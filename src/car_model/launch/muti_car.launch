<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find car_model)/urdf/car.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>
  
  <group ns="leader">
    <param name="robot_description" command="$(find xacro)/xacro $(find car_model)/urdf/car.xacro ns:=leader" />
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 0 -urdf -model leader -param robot_description" output="screen" />
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
    </node>
    <rosparam command="load" file="$(find car_model)/config/joints.yaml" ns="/leader/joint_state_controller" />
    <rosparam command="load" file="$(find car_model)/config/wheels.yaml" ns="/leader/wheels_controller" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/leader"
        args="/leader/joint_state_controller
                /leader/wheels_controller"/>
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" output="screen" />
  </group>

  <group ns="follower">
    <param name="robot_description" command="$(find xacro)/xacro '$(find car_model)/urdf/follower.xacro' ns:=follower"/>
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-x -2.0 -z 0 -urdf -model follower -param robot_description" output="screen" />
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
    </node>
    <rosparam command="load" file="$(find car_model)/config/follower_joints.yaml" ns="/follower/joint_state_controller" />
    <rosparam command="load" file="$(find car_model)/config/follower_wheels.yaml" ns="/follower/wheels_controller" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/follower"
        args="/follower/joint_state_controller
                /follower/wheels_controller"/>
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" output="screen" /> 
  </group>
    
    <node pkg="muti_car_control" type="leader_sensor" name="leader_sensor" output="screen" />
    <node pkg="muti_car_control" type="follower_sensor" name="follower_sensor" output="screen" />
    <node pkg="muti_car_control" type="pid" name="pid" output="screen" /> 
</launch>